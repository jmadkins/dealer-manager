<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DMDataSetSecurity" targetNamespace="http://tempuri.org/DMDataSetSecurity.xsd" xmlns:mstns="http://tempuri.org/DMDataSetSecurity.xsd" xmlns="http://tempuri.org/DMDataSetSecurity.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DMConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DMConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DealerManager.Properties.Settings.GlobalReference.Default.DMConnectionString" Provider="Microsoft.SqlServerCe.Client.4.0" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="securityprofilesTableAdapter" GeneratorDataComponentClassName="securityprofilesTableAdapter" Name="securityprofiles" UserDataComponentName="securityprofilesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DMConnectionString (Settings)" DbObjectName="securityprofiles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [securityprofiles] WHERE (([profileid] = @Original_profileid) AND ([upid] = @Original_upid))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_profileid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="profileid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_upid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="upid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [securityprofiles] ([profilename], [title], [upid]) VALUES (@profilename, @title, @upid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@profilename" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="profilename" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@title" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="title" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@upid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="upid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT [profileid], [profilename], [title], [upid] FROM [securityprofiles]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [securityprofiles] SET [profilename] = @profilename, [title] = @title, [upid] = @upid WHERE (([profileid] = @Original_profileid) AND ([upid] = @Original_upid))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@profilename" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="profilename" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@title" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="title" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@upid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="upid" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_profileid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="profileid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_upid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="upid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="profileid" DataSetColumn="profileid" />
              <Mapping SourceColumn="profilename" DataSetColumn="profilename" />
              <Mapping SourceColumn="title" DataSetColumn="title" />
              <Mapping SourceColumn="upid" DataSetColumn="upid" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="securityrolesTableAdapter" GeneratorDataComponentClassName="securityrolesTableAdapter" Name="securityroles" UserDataComponentName="securityrolesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DMConnectionString (Settings)" DbObjectName="securityroles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [securityroles] WHERE (([roleid] = @Original_roleid))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_roleid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="roleid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [securityroles] ([moduleName], [read], [write]) VALUES (@moduleName, @read, @write)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@moduleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="moduleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@read" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="read" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@write" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="write" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT [roleid], [moduleName], [read], [write] FROM [securityroles]</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [securityroles] SET [moduleName] = @moduleName, [read] = @read, [write] = @write WHERE (([roleid] = @Original_roleid))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@moduleName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="moduleName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@read" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="read" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@write" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="write" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_roleid" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="roleid" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="roleid" DataSetColumn="roleid" />
              <Mapping SourceColumn="moduleName" DataSetColumn="moduleName" />
              <Mapping SourceColumn="read" DataSetColumn="read" />
              <Mapping SourceColumn="write" DataSetColumn="write" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DMDataSetSecurity" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="DMDataSetSecurity" msprop:Generator_UserDSName="DMDataSetSecurity">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="securityprofiles" msprop:Generator_TableClassName="securityprofilesDataTable" msprop:Generator_TableVarName="tablesecurityprofiles" msprop:Generator_TablePropName="securityprofiles" msprop:Generator_RowDeletingName="securityprofilesRowDeleting" msprop:Generator_RowChangingName="securityprofilesRowChanging" msprop:Generator_RowEvHandlerName="securityprofilesRowChangeEventHandler" msprop:Generator_RowDeletedName="securityprofilesRowDeleted" msprop:Generator_UserTableName="securityprofiles" msprop:Generator_RowChangedName="securityprofilesRowChanged" msprop:Generator_RowEvArgName="securityprofilesRowChangeEvent" msprop:Generator_RowClassName="securityprofilesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="profileid" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnprofileid" msprop:Generator_ColumnPropNameInRow="profileid" msprop:Generator_ColumnPropNameInTable="profileidColumn" msprop:Generator_UserColumnName="profileid" type="xs:int" />
              <xs:element name="profilename" msprop:Generator_ColumnVarNameInTable="columnprofilename" msprop:Generator_ColumnPropNameInRow="profilename" msprop:Generator_ColumnPropNameInTable="profilenameColumn" msprop:Generator_UserColumnName="profilename" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="title" msprop:Generator_ColumnVarNameInTable="columntitle" msprop:Generator_ColumnPropNameInRow="title" msprop:Generator_ColumnPropNameInTable="titleColumn" msprop:Generator_UserColumnName="title" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="upid" msprop:Generator_ColumnVarNameInTable="columnupid" msprop:Generator_ColumnPropNameInRow="upid" msprop:Generator_ColumnPropNameInTable="upidColumn" msprop:Generator_UserColumnName="upid" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="securityroles" msprop:Generator_TableClassName="securityrolesDataTable" msprop:Generator_TableVarName="tablesecurityroles" msprop:Generator_TablePropName="securityroles" msprop:Generator_RowDeletingName="securityrolesRowDeleting" msprop:Generator_RowChangingName="securityrolesRowChanging" msprop:Generator_RowEvHandlerName="securityrolesRowChangeEventHandler" msprop:Generator_RowDeletedName="securityrolesRowDeleted" msprop:Generator_UserTableName="securityroles" msprop:Generator_RowChangedName="securityrolesRowChanged" msprop:Generator_RowEvArgName="securityrolesRowChangeEvent" msprop:Generator_RowClassName="securityrolesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="roleid" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnroleid" msprop:Generator_ColumnPropNameInRow="roleid" msprop:Generator_ColumnPropNameInTable="roleidColumn" msprop:Generator_UserColumnName="roleid" type="xs:int" />
              <xs:element name="moduleName" msprop:Generator_ColumnVarNameInTable="columnmoduleName" msprop:Generator_ColumnPropNameInRow="moduleName" msprop:Generator_ColumnPropNameInTable="moduleNameColumn" msprop:Generator_UserColumnName="moduleName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="read" msprop:Generator_ColumnVarNameInTable="columnread" msprop:Generator_ColumnPropNameInRow="read" msprop:Generator_ColumnPropNameInTable="readColumn" msprop:Generator_UserColumnName="read" type="xs:boolean" minOccurs="0" />
              <xs:element name="write" msprop:Generator_ColumnVarNameInTable="columnwrite" msprop:Generator_ColumnPropNameInRow="write" msprop:Generator_ColumnPropNameInTable="writeColumn" msprop:Generator_UserColumnName="write" type="xs:boolean" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1">
      <xs:selector xpath=".//mstns:securityprofiles" />
      <xs:field xpath="mstns:upid" />
    </xs:unique>
    <xs:unique name="Constraint2" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:securityprofiles" />
      <xs:field xpath="mstns:profileid" />
    </xs:unique>
    <xs:unique name="securityroles_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:securityroles" />
      <xs:field xpath="mstns:roleid" />
    </xs:unique>
  </xs:element>
</xs:schema>